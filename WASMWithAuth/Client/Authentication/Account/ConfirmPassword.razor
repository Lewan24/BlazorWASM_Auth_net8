@page "/account/ConfirmPassword/{PageName}"

@using Microsoft.AspNetCore.Authorization

@inject CustomStateProvider Provider
@inject NavigationManager Nav

@attribute [Authorize]

<MudContainer Class="d-flex flex-column pa-4 ma-16 justify-center">
    Confirm that you are you by passing correct password:
    
    <MudInput T="string" @bind-Value="_password" AutoFocus="true" InputMode="InputMode.text" InputType="InputType.Password" Class="ma-4 mb-4"/>
    <MudButton OnClick="Confirm" Color="Color.Secondary" Variant="Variant.Filled" Class="mb-8">Confirm Identity</MudButton>

    @if (!string.IsNullOrWhiteSpace(_errors))
    {
        <p>@_errors</p>
    }
</MudContainer>

@code {
    string? _password = "";
    string? _errors = "";

    [Parameter]
    public string? PageName { get; set; }

    private async Task Confirm()
    {
        _errors = "";

        if (string.IsNullOrWhiteSpace(_password))
        {
            _errors = "Password cant be empty";
            return;
        }

        if (!await Provider.TryLogin(_password))
        {
            _errors = "Invalid password";
            return;
        }

        try
        {
            await Provider.GetUserToken(_password);
            Nav.NavigateTo($"/{PageName}");
        }
        catch (Exception e)
        {
            _errors = e.Message;
        }
    }
}
