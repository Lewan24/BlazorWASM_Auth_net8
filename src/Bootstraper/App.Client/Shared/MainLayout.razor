@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Color="Color.Error" Icon="@Icons.Material.Filled.MoreVert" OnClick="ToggleDrawer"/>
        <MudSpacer/>
        <MudButton Color="Color.Primary" OnClick="LogoutClick" StartIcon="@Icons.Material.Filled.Logout" Variant="Variant.Text">Logout</MudButton>
    </MudAppBar>
    
    <MudDrawer Open="isDrawerOpen">
        <NavMenu/>
    </MudDrawer>

    <MudMainContent>
        <MudContainer Class="pa-4" MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@functions{

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationState { get; set; }

    bool isDrawerOpen = false;

    protected override async Task OnParametersSetAsync()
    {
        if (!(await AuthenticationState).User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/account/login");
        }
    }
    async Task LogoutClick()
    {
        await authStateProvider.Logout();
        navigationManager.NavigateTo("/account/login");
    }

    void ToggleDrawer() => isDrawerOpen = !isDrawerOpen;
}