@page "/account/register"

@using Microsoft.AspNetCore.Components
@using global::Shared.Entities.Models

@layout AuthLayout

@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<MudContainer Class="d-flex flex-column justify-content pa-4 mt-16">
    <h2 class="h2 font-weight-normal login-title">Register</h2>

    <EditForm Model="@RegisterRequest" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <MudCard Class="my-4">
            <MudCardContent>
                <MudTextField Label="First name" HelperText="Max. 8 characters"
                              @bind-Value="RegisterRequest.UserName" For="@(() => RegisterRequest.UserName)"/>
                <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                              @bind-Value="RegisterRequest.Password" For="@(() => RegisterRequest.Password)" InputType="InputType.Password"/>
                <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                              @bind-Value="RegisterRequest.PasswordConfirm" For="@(() => RegisterRequest.PasswordConfirm)" InputType="InputType.Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
    
    <MudButton StartIcon="@Icons.Material.Filled.ChangeCircle" Href="/account/login">Login -></MudButton>
</MudContainer>

@functions{

    RegisterRequest? RegisterRequest { get; set; } = new();
    string? Error { get; set; }

    async Task OnSubmit()
    {
        Error = null;
        try
        {
            await authStateProvider.Register(RegisterRequest);
            navigationManager.NavigateTo("", true);
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }
}